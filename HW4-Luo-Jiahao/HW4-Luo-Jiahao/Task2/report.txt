Section A
1.
RandomForest -P 100 -I 100 -num-slots 1 -K 3 -M 1.0 -V 0.001 -S 1
Time taken to build model: 1.16 seconds
=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.962    0.428    0.892      0.962    0.925      0.609    0.917     0.974     0
                 0.572    0.038    0.802      0.572    0.668      0.609    0.917     0.793     1
Weighted Avg.    0.878    0.344    0.873      0.878    0.870      0.609    0.917     0.935     

Confusion Matrix:
    a    b   <-- classified as
 3023  121 |    a = 0
  366  490 |    b = 1

2.
SMO -C 1.0 -L 0.001 -P 1.0E-12 -N 0 -V -1 -W 1 -K
Time taken to build model: 129.25 seconds
=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.890    0.450    0.879      0.890    0.884      0.448    0.720     0.869     0
                 0.550    0.110    0.576      0.550    0.563      0.448    0.720     0.413     1
Weighted Avg.    0.817    0.377    0.814      0.817    0.816      0.448    0.720     0.771     

Confusion Matrix
    a    b   <-- classified as
 2798  346 |    a = 0
  385  471 |    b = 1

3.
MultilayerPerceptron -L 0.3 -M 0.2 -N 500 -V 0 -S 0 -E 20 -H a
Time taken to build model: 4.44 seconds
Detailed Accuracy By Class

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.943    0.690    0.834      0.943    0.885      0.331    0.818     0.942     0
                 0.310    0.057    0.598      0.310    0.408      0.331    0.818     0.545     1
Weighted Avg.    0.808    0.555    0.783      0.808    0.783      0.331    0.818     0.857     

Confusion Matrix
    a    b   <-- classified as
 2966  178 |    a = 0
  591  265 |    b = 1


Section B

1. The result of Weka is 87.825% compared to my result 80.1% which is approximately 7% higher than my accuracy rate. 
I think because my random forest is based on ID3 to build a single decision tree, while in weka, it utilizes C4.5
which involves information gain ratio as a standard to split the tree which improves the performance. Moreover, weka 
performs a different pruning method and stop criteria.



2. SMO is an algorithm for solving the quadratic programming problem. It uses non-linear mapping to map the original 
data to a relative higher dimension and searches the optimal hyper plane to seperate where two categories of data can 
always be split by the hyper plane. It is difficult to implement it with large scale of training samples and is difficult
to solve multi-class classfication problem.

3. According to the result, SMO takes the longest time to run. Because it takes time to solve the quadratic eqation. 
However, SMO's ROC area is the smallest. That means performance on this dataset is worse than the others.

MultilayerPerceptron is back propagation algorithm which might takes some time to run, it depends on its iteration times. 

Random Forest performs the best among those thress approaches. It takes less time and get a larger ROC area and higher 
correctly classified rate. 

I have tuned the If you have tuned the hidden layer for MultilayerPerceptron which improves the accuracy. Because number 
of hidden layer can affect performance of classifier.







87.87

80.75







